plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.0-RC2'
}

group = 'god.sentix'
version = '1.5.2'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'pl3x-repo'
        url = 'https://repo.pl3x.net/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly("net.pl3x.map:pl3xmap-api:1.0.0-SNAPSHOT")
    implementation("net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks.withType(Jar) { duplicatesStrategy = DuplicatesStrategy.INCLUDE }

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}